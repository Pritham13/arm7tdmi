$date
	Tue Dec 12 18:16:14 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_tb $end
$var wire 1 ! result_writeback $end
$var wire 32 " result [31:0] $end
$var wire 4 # nzcv [3:0] $end
$var reg 4 $ alu_control [3:0] $end
$var reg 32 % operand_a [31:0] $end
$var reg 32 & operand_b [31:0] $end
$var reg 1 ' reset $end
$scope module uut $end
$var wire 4 ( alu_control [3:0] $end
$var wire 32 ) operand_a [31:0] $end
$var wire 32 * operand_b [31:0] $end
$var wire 1 ' reset $end
$var reg 33 + acc [32:0] $end
$var reg 1 , carry_flag $end
$var reg 1 - negative_flag $end
$var reg 4 . nzcv [3:0] $end
$var reg 1 / overflow_flag $end
$var reg 32 0 result [31:0] $end
$var reg 1 ! result_writeback $end
$var reg 1 1 zero_flag $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
01
b0 0
0/
b0 .
0-
0,
bx +
b10100 *
b1010 )
bx (
1'
b10100 &
b1010 %
bx $
b0 #
b0 "
0!
$end
#10
b11110 +
b0 #
b0 .
1!
0,
0/
b11110 "
b11110 0
b100 $
b100 (
0'
#20
b10100 "
b10100 0
b10 $
b10 (
b1010 &
b1010 *
b11110 %
b11110 )
#30
b100 #
b100 .
11
b0 "
b0 0
b0 $
b0 (
b101 &
b101 *
b1000 %
b1000 )
#40
b0 #
b0 .
01
b1000 "
b1000 0
b1 $
b1 (
b111 &
b111 *
b1111 %
b1111 )
#50
b1010 "
b1010 0
b11 $
b11 (
b10100 &
b10100 *
b1010 %
b1010 )
#60
b1 #
b1 .
1/
b1111111111111111111111111111111 "
b1111111111111111111111111111111 0
b10000000000000000000000000000000 +
b101 $
b101 (
b1 &
b1 *
b1111111111111111111111111111111 %
b1111111111111111111111111111111 )
#70
b1111111111111111111111111111011 "
b1111111111111111111111111111011 0
b110 $
b110 (
b101 &
b101 *
#80
b1011 "
b1011 0
b111 $
b111 (
b10100 &
b10100 *
b1010 %
b1010 )
#90
b101 #
b101 .
0!
11
b1000 $
b1000 (
b0 &
b0 *
b0 %
b0 )
#100
b1001 $
b1001 (
b11111111 &
b11111111 *
b11111111 %
b11111111 )
#110
b0 #
b0 .
1!
01
0/
b1010 $
b1010 (
b11 &
b11 *
b101 %
b101 )
#120
b1011 $
b1011 (
b1 &
b1 *
b1111111111111111111111111111111 %
b1111111111111111111111111111111 )
#130
b11110 "
b11110 0
b1100 $
b1100 (
b10100 &
b10100 *
b1010 %
b1010 )
#140
b1101 $
b1101 (
b0 &
b0 *
b101010 %
b101010 )
#150
b10101010 "
b10101010 0
b1110 $
b1110 (
b1010101 &
b1010101 *
b11111111 %
b11111111 )
#160
b11111111111111111111111100000000 "
b11111111111111111111111100000000 0
b1111 $
b1111 (
b0 &
b0 *
#170
